part of 'models.dart';

@freezed
abstract class CreditMemoDTO with _$CreditMemoDTO {
  const factory CreditMemoDTO({
    @JsonKey(name: "id") int? id,
    @JsonKey(name: "customer_id") int? customerId,
    @JsonKey(name: "manual_no") dynamic manualNo,
    @JsonKey(name: "doc_no") dynamic docNo,
    @JsonKey(name: "credit_memo_no") String? creditMemoNo,
    @JsonKey(name: "customer") String? customer,
    @JsonKey(name: "credit_memo_date") DateTime? creditMemoDate,
    @JsonKey(name: "nep_credit_memo_date") dynamic nepCreditMemoDate,
    @JsonKey(name: "currency_name") dynamic currencyName,
    @JsonKey(name: "department_name") dynamic departmentName,
    @JsonKey(name: "next_approver_name") dynamic nextApproverName,
    @JsonKey(name: "ref_type") int? refType,
    @JsonKey(name: "ref_id") dynamic refId,
    @JsonKey(name: "memo") String? memo,
    @JsonKey(name: "location_name") String? locationName,
    @JsonKey(name: "next_approver") dynamic nextApprover,
    @JsonKey(name: "status") int? status,
    @JsonKey(name: "approval_status") int? approvalStatus,
    @JsonKey(name: "status_name") String? statusName,
    @JsonKey(name: "on_behalf_of_id") dynamic onBehalfOfId,
    @JsonKey(name: "party_id") int? partyId,
    @JsonKey(name: "currency_id") dynamic currencyId,
    @JsonKey(name: "exchange_rate") int? exchangeRate,
    @JsonKey(name: "pan_no") dynamic panNo,
    @JsonKey(name: "credit_memo_id") int? creditMemoId,
    @JsonKey(name: "invoice_reference_no") String? invoiceReferenceNo,
    @JsonKey(name: "ref_invoice_id") int? refInvoiceId,
    @JsonKey(name: "location_id") int? locationId,
    @JsonKey(name: "department_id") dynamic departmentId,
    @JsonKey(name: "class_id") dynamic classId,
    @JsonKey(name: "is_cancelled") bool? isCancelled,
    @JsonKey(name: "project_id") dynamic projectId,
    @JsonKey(name: "base_period_id") dynamic basePeriodId,
    @JsonKey(name: "sales_rep_id") int? salesRepId,
    @JsonKey(name: "ledger_id") int? ledgerId,
    @JsonKey(name: "job_no") dynamic jobNo,
    @JsonKey(name: "credit") dynamic credit,
    @JsonKey(name: "purpose") String? purpose,
    @JsonKey(name: "customer_po_ref") dynamic customerPoRef,
    @JsonKey(name: "discount") dynamic discount,
    @JsonKey(name: "discount_amount") int? discountAmount,
    @JsonKey(name: "gross_amount") int? grossAmount,
    @JsonKey(name: "taxable_amount") int? taxableAmount,
    @JsonKey(name: "tax_amount") double? taxAmount,
    @JsonKey(name: "net_total") int? netTotal,
    @JsonKey(name: "net_amount") double? netAmount,
    @JsonKey(name: "promise_date") dynamic promiseDate,
    @JsonKey(name: "contract_period") dynamic contractPeriod,
    @JsonKey(name: "discount_item_id") dynamic discountItemId,
    @JsonKey(name: "item_name") dynamic itemName,
    @JsonKey(name: "owned") dynamic owned,
    @JsonKey(name: "party_name") String? partyName,
    @JsonKey(name: "item_rate") dynamic itemRate,
    @JsonKey(name: "unapplied") dynamic unapplied,
    @JsonKey(name: "applied") dynamic applied,
    @JsonKey(name: "auto_apply") bool? autoApply,
    @JsonKey(name: "service_type") dynamic serviceType,
    @JsonKey(name: "order_type") dynamic orderType,
    @JsonKey(name: "ride_date") dynamic rideDate,
    @JsonKey(name: "car_details") dynamic carDetails,
    @JsonKey(name: "payment_mode") int? paymentMode,
    @JsonKey(name: "payment_modes") String? paymentModes,
    @JsonKey(name: "in_words") String? inWords,
    @JsonKey(name: "credit_memo_details") List<dynamic>? creditMemoDetails,
  }) = _CreditMemoDTO;

  factory CreditMemoDTO.fromJson(Map<String, dynamic> json) =>
      _$CreditMemoDTOFromJson(json);
}

extension CreditMemoDTOMappers on CreditMemoDTO {
  CreditMemo toDomain() {
    return CreditMemo(
      id: id,
      customerId: customerId,
      docNo: docNo as String?,
      creditMemoNo: creditMemoNo,
      customer: customer,
      creditMemoDate: creditMemoDate,
      nepCreditMemoDate: nepCreditMemoDate as String?,
      currencyName: currencyName as String?,
      refType: refType,
      memo: memo,
      locationName: locationName,
      status: status,
      approvalStatus: approvalStatus,
      statusName: statusName,
      partyId: partyId,
      currencyId: currencyId as int?,
      exchangeRate: exchangeRate,
      panNo: panNo as String?,
      creditMemoId: creditMemoId,
      invoiceReferenceNo: invoiceReferenceNo,
      refInvoiceId: refInvoiceId,
      locationId: locationId,
      isCancelled: isCancelled,
      salesRepId: salesRepId,
      ledgerId: ledgerId,
      credit: credit,
      purpose: purpose,
      discount: discount as num?,
      discountAmount: discountAmount as num?,
      grossAmount: grossAmount as num?,
      taxableAmount: taxableAmount as num?,
      taxAmount: taxAmount,
      netTotal: netTotal,
      netAmount: netAmount,
      itemName: itemName as String?,
      partyName: partyName,
      itemRate: itemRate as num?,
      autoApply: autoApply,
    );
  }
}
