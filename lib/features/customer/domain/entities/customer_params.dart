part of 'entities.dart';

@freezed
abstract class CustomerParams with _$CustomerParams {
  const factory CustomerParams({
    @Default(0) @JsonKey(name: "visit_id") int visitId,
    @JsonKey(name: "organisation_id") int? organisationId,
    @JsonKey(name: "guid") dynamic guid,
    @JsonKey(name: "customer_status") int? customerStatus,
    @JsonKey(name: "customer_category_id") dynamic customerCategoryId,
    @JsonKey(name: "sales_rep_id") dynamic salesRepId,
    @JsonKey(name: "type") int? type,
    @JsonKey(name: "is_individual") bool? isIndividual,
    @JsonKey(name: "company_name") String? companyName,
    @JsonKey(name: "first_name") String? firstName,
    @JsonKey(name: "last_name") String? lastName,
    @JsonKey(name: "is_visit_no_auto") bool? isVisitNoAuto,
    @JsonKey(name: "person_title") String? personTitle,
    @JsonKey(name: "territory_id") dynamic territoryId,
    @JsonKey(name: "proprietor_name") dynamic proprietorName,
    @JsonKey(name: "email") String? email,
    @JsonKey(name: "phone") String? phone,
    @JsonKey(name: "alt_phone") String? altPhone,
    @JsonKey(name: "fax") String? fax,
    @JsonKey(name: "web_address") String? webAddress,
    @JsonKey(name: "citizenship_no") String? citizenshipNo,
    @JsonKey(name: "is_billed") bool? isBilled,
    @JsonKey(name: "is_banned") bool? isBanned,
    @JsonKey(name: "is_inactive") bool? isInactive,
    @JsonKey(name: "class_id") dynamic classId,
    @JsonKey(name: "employee_id") dynamic employeeId,
    @JsonKey(name: "qualified_on") dynamic qualifiedOn,
    @JsonKey(name: "annual_revenue") dynamic annualRevenue,
    @JsonKey(name: "no_of_employee") dynamic noOfEmployee,
    @JsonKey(name: "industry") dynamic industry,
    @JsonKey(name: "address") dynamic address,
    @JsonKey(name: "shipping_address") dynamic shippingAddress,
    @JsonKey(name: "address2") dynamic address2,
    @JsonKey(name: "currency_id") int? currencyId,
    @JsonKey(name: "term_id") dynamic termId,
    @JsonKey(name: "ledger_id") dynamic ledgerId,
    @JsonKey(name: "pan") String? pan,
    @JsonKey(name: "wh_tax_id") dynamic whTaxId,
    @JsonKey(name: "tax_id") dynamic taxId,
    @JsonKey(name: "credit_limit") dynamic creditLimit,
    @JsonKey(name: "lead_source") dynamic leadSource,
    @JsonKey(name: "source_website") dynamic sourceWebsite,
    @JsonKey(name: "campaign") dynamic campaign,
    @JsonKey(name: "message_list") List<dynamic>? messageList,
    @JsonKey(name: "task_list") List<dynamic>? taskList,
    @JsonKey(name: "event_list") List<dynamic>? eventList,
    @JsonKey(name: "phone_call_details") List<dynamic>? phoneCallDetails,
    @JsonKey(name: "user_note_details") List<dynamic>? userNoteDetails,
    @JsonKey(name: "relationship_details") List<dynamic>? relationshipDetails,
    @Default([]) @JsonKey(name: "fileList") List<FileParams> fileList,
  }) = _CustomerParams;

  factory CustomerParams.fromJson(Map<String, dynamic> json) =>
      _$CustomerParamsFromJson(json);
}

// Extension for CustomerParams to convert to CustomerEntity
extension CustomerParamsMapper on CustomerParams {
  CustomerEntity toEntity() {
    return CustomerEntity(
      id: null, // Since it's a new entity for creation
      visitId: visitId,
      code: guid?.toString(),
      fullName: '$firstName $lastName'.trim(),
      personTitle: personTitle,
      type: type,
      firstName: firstName,
      lastName: lastName,
      companyName: companyName,
      address1: address?.toString(),
      memo: null,
      citizenshipNo: citizenshipNo,
      proprietorName: proprietorName?.toString(),
      email: email,
      phone: phone,
      altPhone: altPhone,
      fax: fax,
      address: address?.toString(),
      shippingAddress: shippingAddress?.toString(),
      address2: address2?.toString(),
      isIndividual: isIndividual,
      isBanned: isBanned,
      isInactive: isInactive,
      locationId: null,
      subsidiaryId: null,
      customerCategoryId: customerCategoryId as int?,
      status: null,
      prospectStatus: null,
      customerStatus: customerStatus,
      leadSource: leadSource,
      prospectSource: null,
      employeeId: employeeId as int?,
      qualifiedOn: qualifiedOn as DateTime?,
      annualRevenue: annualRevenue,
      noOfEmployee: noOfEmployee,
      industry: industry,
      webAddress: webAddress,
      classId: classId,
      currencyId: currencyId,
      termId: termId,
      ledgerId: ledgerId as int?,
      panNo: null,
      pan: pan,
      reasonForCloseLost: null,
      isVisit: null,
      visitDate: null,
      isVisitSync: null,
      isPotential: null,
      potentialDate: null,
      isPotentialSync: null,
      isBilled: isBilled,
      salesRepId: salesRepId as int?,
      whTaxId: whTaxId,
      taxId: taxId,
      creditLimit: creditLimit,
      holdStatus: null,
      sourceWebsite: sourceWebsite,
      campaign: campaign,
      billedDate: null,
      isBilledSync: null,
      isUpdated: null,
      isCancelled: null,
      territoryId: territoryId,
      segmentId: null,
      applicationId: null,
      vehicleId: null,
      buyingIntentionId: null,
      areaId: null,
      tole: null,
      wardNo: null,
      dateOfBirth: null,
      dobBs: null,
      issueDate: null,
      expiryDate: null,
      balance: null,
      gender: null,
      isMember: null,
      partnerId: null,
      partyRecordType: null,
      imagePath: null,
      age: null,
      insuranceNo: null,
      latitude: null,
      longitude: null,
      subType: null,
      isDefault: null,
    );
  }
}
